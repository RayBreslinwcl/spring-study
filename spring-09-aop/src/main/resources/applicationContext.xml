<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--<context:annotation-config/>-->

    <bean id="userService" class="com.ray.service.UserServiceImp"/>
    <bean id="beforeLog" class="com.ray.logAspect.beforelog"/>
    <bean id="afterLog" class="com.ray.logAspect.afterlog" />


    <!--方式一：直接使用spring api接口-->
    <!--配置aop：首先导入sop约束-->
    <!--<aop:config>-->
        <!--&lt;!&ndash;切入点：expression表达式，execution中添加要执行的位置&ndash;&gt;-->
        <!--<aop:pointcut id="pointcut" expression="execution(* com.ray.service.UserServiceImp.*(..))"/>-->

        <!--&lt;!&ndash;执行环绕增强&ndash;&gt;-->
        <!--<aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
        <!--<aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
    <!--</aop:config>-->


    <!--方式二：自定义类-->
    <!--<bean id="diyLogPoint" class="com.ray.diylog.logPointcut"/>-->

    <!--<aop:config>-->
        <!--&lt;!&ndash;自定义切面，ref使用引用类&ndash;&gt;-->
        <!--<aop:aspect ref="diyLogPoint">-->
            <!--&lt;!&ndash;切入点&ndash;&gt;-->
            <!--<aop:pointcut id="point" expression="execution(* com.ray.service.UserServiceImp.*(..))"/>-->
            <!--&lt;!&ndash;通知&ndash;&gt;-->
            <!--<aop:before method="before" pointcut-ref="point"/>-->
            <!--<aop:after method="after" pointcut-ref="point"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->


    <!--方式三-->
    <!--注册切面类，或者直接@Component也可-->
    <bean id="annotation" class="com.ray.diylog.AnnotationPointCut"/>
    <!--开启注解支持-->
    <!--动态代理实现：JDK(默认）proxy-target-class="false"  cglib：proxy-target-class="true"-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>
</beans>
